generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  name         String?
  password     String
  account      Accounts[]
  Categories   Categories[]
  transactions Transactions[]
}

model Accounts {
  id           Int            @id @default(autoincrement())
  name         String
  balance      Float
  userId       Int
  user         User           @relation(fields: [userId], references: [id])
  transactions Transactions[]
}

model Transactions {
  id                   Int              @id @default(autoincrement())
  description          String
  amount               Float
  installments         Int
  current_installments Int
  isRecurrence         Boolean
  userId               Int
  paymentTypeId        Int
  accountsId           Int
  transactionsTypeId   Int
  date                 DateTime
  createdAt            DateTime
  updatedAt            DateTime
  categoryId           Int?
  isConsolidated       Boolean?
  Adjustments          Adjustments[]
  Accounts             Accounts         @relation(fields: [accountsId], references: [id])
  Category             Categories?      @relation(fields: [categoryId], references: [id])
  PaymentType          PaymentType      @relation(fields: [paymentTypeId], references: [id])
  TransactionsType     TransactionsType @relation(fields: [transactionsTypeId], references: [id])
  User                 User             @relation(fields: [userId], references: [id])
}

model Adjustments {
  id            Int          @id @default(autoincrement())
  newAmount     Float
  newDate       DateTime
  isOnly        Boolean
  transactionId Int
  Transaction   Transactions @relation(fields: [transactionId], references: [id])
}

model Categories {
  id             Int            @id @default(autoincrement())
  category       String
  parentId       Int?
  userId         Int?
  categoryTypeId Int
  CategotyType   CategoryType   @relation(fields: [categoryTypeId], references: [id])
  parent         Categories?    @relation("ParentCategory", fields: [parentId], references: [id])
  subCategories  Categories[]   @relation("ParentCategory")
  user           User?          @relation(fields: [userId], references: [id])
  Transactions   Transactions[]
}

model CategoryType {
  id         Int          @id @default(autoincrement())
  type       String
  Categories Categories[]
}

model PaymentType {
  id           Int            @id @default(autoincrement())
  type         String
  transactions Transactions[]
}

model TransactionsType {
  id           Int            @id @default(autoincrement())
  type         String
  transactions Transactions[]
}
